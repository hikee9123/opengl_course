{"version":3,"sources":["Home.tsx","Slide.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","styled","div","Page","Home","href","to","Slide","match","useRouteMatch","id","params","dataPath","console","log","deckRef","useRef","useEffect","current","deck","Reveal","plugins","Markdown","Highlight","initialize","embedded","center","control","controlsTutorial","slideNumber","showSlideNumber","hash","style","width","className","position","top","bottom","left","height","zIndex","fontSize","data-markdown","process","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"8eAGA,IAAMA,EAAaC,IAAOC,IAAV,KAIVC,EAAOF,IAAOC,IAAV,KAwCKE,MAhCf,WACE,OACE,cAACJ,EAAD,UACA,eAACG,EAAD,WACE,4DACA,0ZAKA,2DACA,6BACE,6BAAI,mBAAGE,KAAK,2CAAR,2CAEN,uEACA,+BACE,6BAAI,cAAC,IAAD,CAAMC,GAAG,kBAAT,+BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,kCAAT,+CACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,6BAAT,0CACJ,iEACA,+BACE,6BAAI,cAAC,IAAD,CAAMA,GAAG,qCAAT,sBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,qCAAT,4BAGR,8CACA,iF,0CCgCSC,MA5Df,WAIE,IAAMC,EAAQC,cAERC,EADQF,EAAMG,OACHD,GACXE,EAAQ,gBAAYF,EAAZ,OAEdG,QAAQC,IAAI,SAAUN,GACtB,IAAMO,EAAUC,iBAAO,MAmBvB,OAlBAC,qBAAU,WACN,IAAIF,EAAQG,QAAZ,CAEA,IAAIC,EAAO,IAAIC,IAAO,CACpBC,QAAS,CAACC,IAAUC,OAEtBJ,EAAKK,WAAW,CACdC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,kBAAkB,EAClBC,aAAa,EACbC,gBAAiB,MACjBC,MAAM,IAERhB,EAAQG,QAAUC,KACnB,CAACJ,IAGF,qBAAKiB,MAAO,CACVC,MAAO,QADT,SAGE,sBAAKC,UAAU,SAASF,MAAO,CAC7BG,SAAU,WACVC,IAAK,EACLC,OAAQ,GAHV,UAKE,cAAC,IAAD,CAAM/B,GAAG,IAAT,SACE,qBAAK0B,MAAO,CACVG,SAAU,WACVC,IAAK,GACLE,KAAM,GACNL,MAAO,IACPM,OAAQ,IACRC,OAAQ,GACRC,SAAU,QAPZ,oBAYF,qBAAKP,UAAU,SAAf,SACE,yBAASQ,gBAAeC,iBAAyB/B,Y,MC9C5CgC,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3C,IACjC,cAAC,IAAD,CAAOyC,KAAK,OAAZ,SACE,cAAC,EAAD,UCCOG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAS,iBAAxB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.c1c514d9.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Background = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Page = styled.div`\r\n  margin: auto;\r\n  width: 800px;\r\n  padding: 40px;\r\n  background-color: #f8f8f8;\r\n  border-radius:20px;\r\n`;\r\n\r\nfunction Home() {\r\n  return (\r\n    <Background>\r\n    <Page>\r\n      <h1> OpenGL course by Rinthel </h1>\r\n      <p>\r\n        Rinthel의 OpenGL 코스 페이지에 오신 분들을 환영합니다.\r\n        이 페이지는 강원대학교 2021년 1학기 \"컴퓨터 그래픽스\" 수업과\r\n        관련된 슬라이드 노트를 담고 있습니다.\r\n      </p>\r\n      <h3>관련 링크</h3>\r\n      <ul>\r\n        <li><a href=\"https://github.com/rinthel/opengl_course\">Github 저장소</a></li>\r\n      </ul>\r\n      <h3>슬라이드 노트</h3>\r\n      <ul>\r\n        <li><Link to=\"01_introduction\">1. Introduction</Link></li>\r\n        <li><Link to=\"02_computer_graphics_and_opengl\">2. Computer Graphics and OpenGL</Link></li>\r\n        <li><Link to=\"03_development_environment\">3. Development Environment</Link></li>\r\n        <li>4. Graphics Pipeline and Shader</li>\r\n        <ul>\r\n          <li><Link to=\"04_graphics_pipeline_and_shader_01\">Part 1</Link></li>\r\n          <li><Link to=\"04_graphics_pipeline_and_shader_02\">Part 2</Link></li>\r\n        </ul>\r\n      </ul>\r\n      <h3>문의</h3>\r\n      <h4>권지용 (rinthel AT gmail.com)</h4>\r\n    </Page>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default Home;","import { useEffect, useRef } from 'react';\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\n// @ts-ignore\r\nimport Reveal from 'reveal.js';\r\n// @ts-ignore\r\nimport Markdown from 'reveal.js/plugin/markdown/markdown.esm.js';\r\n// @ts-ignore\r\nimport Highlight from 'reveal.js/plugin/highlight/highlight.esm.js';\r\nimport 'reveal.js/dist/reveal.css';\r\nimport 'reveal.js/dist/theme/moon.css';\r\nimport 'reveal.js/plugin/highlight/monokai.css';\r\n\r\nfunction Slide() {\r\n  type Params = {\r\n    id: string\r\n  };\r\n  const match = useRouteMatch();\r\n  const param = match.params as Params;\r\n  const id = param.id;\r\n  const dataPath = `/note/${id}.md`;\r\n\r\n  console.log(\"match:\", match);\r\n  const deckRef = useRef(null);\r\n  useEffect(() => {\r\n      if (deckRef.current)\r\n        return;\r\n      let deck = new Reveal({\r\n        plugins: [Markdown, Highlight]\r\n      });\r\n      deck.initialize({\r\n        embedded: true,\r\n        center: true,\r\n        control: true,\r\n        controlsTutorial: true,\r\n        slideNumber: true,\r\n        showSlideNumber: \"all\",\r\n        hash: true,\r\n      });\r\n      deckRef.current = deck;\r\n  }, [deckRef]);\r\n  \r\n  return (\r\n    <div style={{\r\n      width: \"100%\",\r\n    }}>\r\n      <div className=\"reveal\" style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n      }}>\r\n        <Link to=\"/\">\r\n          <div style={{\r\n            position: \"absolute\",\r\n            top: 10,\r\n            left: 10,\r\n            width: 100,\r\n            height: 100,\r\n            zIndex: 10,\r\n            fontSize: '1rem',\r\n          }}>\r\n            Home\r\n          </div>\r\n        </Link>\r\n        <div className=\"slides\">\r\n          <section data-markdown={process.env.PUBLIC_URL + dataPath}>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slide;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Slide from \"./Slide\";\r\nimport \"./App.css\";\r\n\r\n// @ts-ignore\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home}></Route>\r\n      <Route path=\"/:id\">\r\n        <Slide/>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/opengl_course\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}